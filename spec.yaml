name: zero2prod
# 사용할 수 있는 옵션은 https://www.digitalocean.com/docs/app-platform/#regional-availability을 참조한다.
# 사용할 수 있는 리전은 https://www.digitalocean.com/docs/platform/availability-matrix/를 참조한다.
# `fra`는 Frankfurt (Germany - EU)를 나타낸다.

region: fra
services:
  - name: zero2prod
    # 저장소 루트에 대한 상대 경로
    dockerfile_path: Dockerfile
    source_dir: .
    github:
      branch: root-chapter-05
      deploy_on_push: true
      repo: moseskim/zero-to-production
    # 애플리케이션의 건강을 보장하기 위해 DigitalOcean에서 사용하는 액티브 프로브
    health_check:
      # 헬스 체크 엔드포인트에 대한 경로! 결과적으로 유용한 것으로 판명된다!
      http_path: /health_check
    # 애플리케이션이 유입되는 요청을 리스닝하기 위해 사용하는 포트
    # configuration.yml 파일에 지정하는 것과 일치해야 한다!
    http_port: 8000
    # 프러덕션 워크로드에서는 최소 2 이상이어야 한다!
    instance_count: 1
    # 우선 최소 규모로 운영...
    instance_size_slug: basic-xxs
    # 모든 유입 요청은 app으로 라우팅되어야 한다
    routes:
      - path: /
    envs:
      - key: APP_DATABASE__USERNAME
        scope: RUN_TIME
        value: ${newsletter.USERNAME}
      - key: APP_DATABASE__PASSWORD
        scope: RUN_TIME
        value: ${newsletter.PASSWORD}
      - key: APP_DATABASE__HOST
        scope: RUN_TIME
        value: ${newsletter.HOSTNAME}
      - key: APP_DATABASE__PORT
        scope: RUN_TIME
        value: ${newsletter.PORT}
      - key: APP_DATABASE__DATABASE_NAME
        scope: RUN_TIME
        value: ${newsletter.DATABASE}
databases:
  # PG = Postgres
  - engine: PG
    # 데이터베이스 이름
    name: newsletter
    # 최소 규모로 운영한다
    num_nodes: 1
    size: db-s-dev-database
    # Postgres version - 여기에서는 최신 버전을 사용한다
    version: "14"